import {
  createLayout,
  makeLayoutProps
} from "./chunk-JFLOEBPA.js";
import "./chunk-GV3Y45YO.js";
import {
  useRtl
} from "./chunk-JNRA245L.js";
import "./chunk-MUAUN7JV.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-QZGGPUF5.js";
import {
  genericComponent,
  makeComponentProps,
  omit,
  propsFactory,
  useRender
} from "./chunk-TKGQZXWI.js";
import {
  createBaseVNode,
  normalizeClass,
  normalizeStyle
} from "./chunk-NVZ2TQIJ.js";
import "./chunk-PZ5AY32C.js";

// node_modules/vuetify/lib/components/VApp/VApp.js
import "C:/Users/kauan/OneDrive/Documentos/projeto1_npi/vue_front/node_modules/vuetify/lib/components/VApp/VApp.css";
var makeVAppProps = propsFactory({
  ...makeComponentProps(),
  ...omit(makeLayoutProps(), ["fullHeight"]),
  ...makeThemeProps()
}, "VApp");
var VApp = genericComponent()({
  name: "VApp",
  props: makeVAppProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const theme = provideTheme(props);
    const {
      layoutClasses,
      getLayoutItem,
      items,
      layoutRef
    } = createLayout({
      ...props,
      fullHeight: true
    });
    const {
      rtlClasses
    } = useRtl();
    useRender(() => {
      var _a;
      return createBaseVNode("div", {
        "ref": layoutRef,
        "class": normalizeClass(["v-application", theme.themeClasses.value, layoutClasses.value, rtlClasses.value, props.class]),
        "style": normalizeStyle([props.style])
      }, [createBaseVNode("div", {
        "class": "v-application__wrap"
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)])]);
    });
    return {
      getLayoutItem,
      items,
      theme
    };
  }
});
export {
  VApp
};
//# sourceMappingURL=vuetify_components_VApp.js.map
