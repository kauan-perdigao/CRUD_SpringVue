{
  "version": 3,
  "sources": ["../../vuetify/src/composables/router.tsx"],
  "sourcesContent": ["// Utilities\nimport {\n  computed,\n  nextTick,\n  onScopeDispose, reactive,\n  resolveDynamicComponent,\n  toRef,\n} from 'vue'\nimport { deepEqual, getCurrentInstance, hasEvent, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { PropType, Ref, SetupContext } from 'vue'\nimport type {\n  RouterLink as _RouterLink,\n  useLink as _useLink,\n  NavigationGuardNext,\n  RouteLocationNormalizedLoaded,\n  RouteLocationRaw,\n  Router,\n} from 'vue-router'\nimport type { EventProp } from '@/util'\n\nexport function useRoute (): Ref<RouteLocationNormalizedLoaded | undefined> {\n  const vm = getCurrentInstance('useRoute')\n\n  return computed(() => vm?.proxy?.$route)\n}\n\nexport function useRouter (): Router | undefined {\n  return getCurrentInstance('useRouter')?.proxy?.$router\n}\n\nexport interface LinkProps {\n  href: string | undefined\n  replace: boolean | undefined\n  to: RouteLocationRaw | undefined\n  exact: boolean | undefined\n  disabled: boolean | undefined\n}\n\nexport interface LinkListeners {\n  onClick?: EventProp | undefined\n  onClickOnce?: EventProp | undefined\n}\n\nexport interface UseLink extends Omit<Partial<ReturnType<typeof _useLink>>, 'href'> {\n  isLink: Readonly<Ref<boolean>>\n  isRouterLink: Readonly<Ref<boolean>>\n  isClickable: Readonly<Ref<boolean>>\n  href: Ref<string | undefined>\n  linkProps: Record<string, string | undefined>\n}\n\nexport function useLink (props: LinkProps & LinkListeners, attrs: SetupContext['attrs']): UseLink {\n  const RouterLink = resolveDynamicComponent('RouterLink') as typeof _RouterLink | string\n\n  const isLink = toRef(() => !!(props.href || props.to))\n  const isClickable = computed(() => {\n    return isLink?.value || hasEvent(attrs, 'click') || hasEvent(props, 'click')\n  })\n\n  if (typeof RouterLink === 'string' || !('useLink' in RouterLink)) {\n    const href = toRef(() => props.href)\n    return {\n      isLink,\n      isRouterLink: toRef(() => false),\n      isClickable,\n      href,\n      linkProps: reactive({ href }),\n    }\n  }\n\n  // vue-router useLink `to` prop needs to be reactive and useLink will crash if undefined\n  const routerLink = RouterLink.useLink({\n    to: toRef(() => props.to || ''),\n    replace: toRef(() => props.replace),\n  })\n  // Actual link needs to be undefined when to prop is not used\n  const link = computed(() => props.to ? routerLink : undefined)\n  const route = useRoute()\n  const isActive = computed(() => {\n    if (!link.value) return false\n    if (!props.exact) return link.value.isActive?.value ?? false\n    if (!route.value) return link.value.isExactActive?.value ?? false\n\n    return link.value.isExactActive?.value && deepEqual(link.value.route.value.query, route.value.query)\n  })\n  const href = computed(() => props.to ? link.value?.route.value.href : props.href)\n  const isRouterLink = toRef(() => !!props.to)\n\n  return {\n    isLink,\n    isRouterLink,\n    isClickable,\n    isActive,\n    route: link.value?.route,\n    navigate: link.value?.navigate,\n    href,\n    linkProps: reactive({\n      href,\n      'aria-current': toRef(() => isActive.value ? 'page' : undefined),\n      'aria-disabled': toRef(() => props.disabled && isLink.value ? 'true' : undefined),\n      tabindex: toRef(() => props.disabled && isLink.value ? '-1' : undefined),\n    }),\n  }\n}\n\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object] as PropType<RouteLocationRaw>,\n  exact: Boolean,\n}, 'router')\n\nlet inTransition = false\nexport function useBackButton (router: Router | undefined, cb: (next: NavigationGuardNext) => void) {\n  let popped = false\n  let removeBefore: (() => void) | undefined\n  let removeAfter: (() => void) | undefined\n\n  if (IN_BROWSER && router?.beforeEach) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate)\n      removeBefore = router.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next())\n        } else {\n          popped ? cb(next) : next()\n        }\n        inTransition = true\n      })\n      removeAfter = router?.afterEach(() => {\n        inTransition = false\n      })\n    })\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate)\n      removeBefore?.()\n      removeAfter?.()\n    })\n  }\n\n  function onPopstate (e: PopStateEvent) {\n    if (e.state?.replaced) return\n\n    popped = true\n    setTimeout(() => (popped = false))\n  }\n}\n"],
  "mappings": "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",
  "names": ["useRoute", "vm", "getCurrentInstance", "computed", "proxy", "$route", "useRouter", "$router", "useLink", "props", "attrs", "RouterLink", "resolveDynamicComponent", "isLink", "toRef", "href", "to", "isClickable", "value", "hasEvent", "isRouterLink", "linkProps", "reactive", "routerLink", "replace", "link", "undefined", "route", "isActive", "_a", "_b", "exact", "isExactActive", "deepEqual", "query", "navigate", "disabled", "tabindex", "makeRouterProps", "propsFactory", "String", "Boolean", "Object", "inTransition", "useBackButton", "router", "cb", "popped", "removeBefore", "removeAfter", "IN_BROWSER", "beforeEach", "nextTick", "window", "addEventListener", "onPopstate", "from", "next", "setTimeout", "afterEach", "onScopeDispose", "removeEventListener", "e", "state", "replaced"]
}
